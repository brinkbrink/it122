<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Tapes on Deck</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <style>

        html {
            color: #333745;
            background-color: #7CA5B8;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif
        }

        main {
          background-color: #FFEEDB;
          width: 90%;
          margin: auto;
          padding: .5em 2em 2em 2em;
          border-radius: 15px;
        }
        h2, h3, h4 {
          font-family: Georgia, serif;
          font-size: 2em;
        }

        h3 {
          font-size: 1.5em;
        }

        h4 {
            font-size: 1.2em;
        }

        .title {
            font-style: italic;
        }

        p {
            font-size: 1.2em;
        }

        a {
            color: #FE5F55;
        }

        a:hover {
            color: #7F96FF;
            text-decoration-style: wavy;
        }

        label {
            display: block;
            padding: .5vh;
        }

        button {
            background-color: #7F96FF;
            color: #FFF;
            border-radius: 10%;
            padding: .2vh 1vw;
            margin: 2vh .2vw 0;
        }
    </style>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/babel">

    const ColoredLine = ({ color }) => (
        <hr
            style={{
                color: color,
                backgroundColor: color,
                height: .1
            }}
        />
    );
    const header = <h2>Home</h2>;
    const subHeader = <h3>Tapes</h3>;

    const Tapes = (props) => {
        let tapesList = props.tapes.map((tape) => <li id={tape._id} key={tape._id} onClick={props.clickHandler}>{tape.title}</li>);
        return <ul>{tapesList}</ul>;
    }

    const TapeDetail = (props) => {
        return (
            <div>
                <hr/>
                <h4>Details:</h4>
                <form id="edit-tape-detail">
                    <label>Title: <input type="text" name="title" onChange={props.change} value={props.tape.title || ""} placeholder="Title"/></label>
                    <label>Artist: <input type="text" name="artist" onChange={props.change} value={props.tape.artist || ""} placeholder="Artist"/></label>
                    <label>Year: <input type="text" name="year" onChange={props.change} value={props.tape.year || ""} placeholder="Year"/></label>
                    <label>Genre: <input type="text" name="genre" onChange={props.change} value={props.tape.genre || ""} placeholder="Genre"/></label>
                    <label>Price: <input type="text" name="price" onChange={props.change} value={props.tape.price || ""} placeholder="Price"/></label>
                </form>
                <button onClick={props.reset} type="button">Clear</button>
                <button onClick={props.save} type="button">Save</button>
                <button onClick={props.delete} type="button">Delete</button>
            </div>
        )
    }
    
    class TapeApp extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                tapes: <%- tapes %>,
                currentTape: {}
            };

            this.showDetail = this.showDetail.bind(this);
            this.fieldChange = this.fieldChange.bind(this);
            this.clearForm = this.clearForm.bind(this);
            this.saveTape = this.saveTape.bind(this);
            this.deleteTape = this.deleteTape.bind(this);

        }

        showDetail = (event) => {
            console.log(event.target.id)
            let detailTape = this.state.tapes.find((tape) => tape._id == event.target.id);
            this.setState({currentTape: detailTape})
        }

        fieldChange = (event) => {
            let newTape = this.state.currentTape;
            newTape[event.target.name] = event.target.value;
            this.setState({currentTape: newTape});
        }

        clearForm = (event) => {
          this.setState({currentTape: [{}]});
        }

        saveTape = () => {
            if (this.state.currentTape == {}) return;
            let newTape = this.state.currentTape;
            let newList;
            fetch("/api/v1/add/", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(this.state.currentTape)
            })
                .then(res => res.json())
                .then((json) => { 
                if (!newTape._id) {
                    newTape._id = json._id;
                    newList = this.state.tapes;
                    newList.push(newTape);
                    this.setState({tapes: newList, currentTape: {}})
                }
                });
        }

        deleteTape = () => {
            let id = this.state.currentTape._id;
            if (this.state.currentTape == {}) return;
            fetch(`api/v1/delete/${id}`)
                .then((res) => res.json())
                .then(data => { 
                    const activeList = this.state.tapes.filter((tape) => {
                        return tape._id !== id;
                    });
                    this.setState({tapes: activeList, currentTape: {}});
                }  
                );
        }

        render() {
            return (
            <main>
                {header}
                <ColoredLine color="#333745" />
                {subHeader}
                <Tapes tapes={this.state.tapes} clickHandler={this.showDetail.bind(this)} />
                <TapeDetail
                tape={this.state.currentTape}
                change={this.fieldChange}
                reset={this.clearForm}
                save={this.saveTape}
                delete={this.deleteTape.bind(this)}
                />
            </main>
            )
        }
    }

    const container = document.getElementById('root');
    const root = ReactDOM.createRoot(container);
    root.render(<TapeApp />);

    </script>
  </body>
</html>