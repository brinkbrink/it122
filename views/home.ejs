<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Tapes on Deck</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <style>

        html {
            color: #333745;
            background-color: #7CA5B8;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif
        }

        main {
          background-color: #FFEEDB;
          width: 90%;
          margin: auto;
          padding: .5em 2em 2em 2em;
          border-radius: 15px;
        }
        h2, h3, h4 {
          font-family: Georgia, serif;
          font-size: 2em;
        }

        h3 {
          font-size: 1.5em;
        }

        h4 {
            font-size: 1.2em;
        }

        .title {
            font-style: italic;
        }

        p {
            font-size: 1.2em;
        }

        a {
            color: #FE5F55;
        }

        a:hover {
            color: #7F96FF;
            text-decoration-style: wavy;
        }

        label {
            display: block;
            padding: .5vh;
        }
    </style>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/babel">

    const ColoredLine = ({ color }) => (
        <hr
            style={{
                color: color,
                backgroundColor: color,
                height: .1
            }}
        />
    );
    const header = <h2>Home</h2>;
    const subHeader = <h3>Tapes</h3>;

    const Tapes = (props) => {
        let tapesList = props.data.map((tape) => <li key={tape.title} id={tape.title} onClick={props.clickHandler}>{tape.title}</li>);
        return <ul>{tapesList}</ul>;
    }

    const TapeDetail = (props) => {
        return (
            <div>
                <hr/>
                <h4>Details:</h4>
                <form id="edit-tape-detail">
                    <label>Title: <input type="text" name="title" onChange={props.onChange} value={props.tape.title || ""}/></label>
                    <label>Artist: <input type="text" name="artist" onChange={props.onChange} value={props.tape.artist || ""}/></label>
                    <label>Year: <input type="text" name="year" onChange={props.onChange} value={props.tape.year || ""}/></label>
                    <label>Genre: <input type="text" name="genre" onChange={props.onChange} value={props.tape.genre || ""}/></label>
                    <label>Artist: <input type="text" name="price" onChange={props.onChange} value={props.tape.price || ""}/></label>
                    <button onClick={props.resetHandler} type="button">Cancel</button>
                </form>
            </div>
        )
    }
    
    class TapeApp extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                tapes: <%- tapes %>,
                currentTape: {}
            };
        }

        showDetail = (event) => {
            let title = event.target.innerText;
            let newTape = this.state.tapes.find((tape) => tape.title == title);
            this.setState({"currentTape":newTape})
        }

        fieldChanged = (event) => {
            let newTape = this.state.currentTape;
            newTape[event.target.name] = event.target.value;
            this.setState({currentTape: newTape});
            console.log(event.target.value);
        }

        clearForm = (event) => {
          
          this.setState({"currentTape":{}})
        }

        render() {
            return (
            <main>
                {header}
                <ColoredLine color="#333745" />
                {subHeader}
                <Tapes data={this.state.tapes} clickHandler = {this.showDetail} resetHandler = {this.clearForm}/>
                <TapeDetail
                tape={this.state.currentTape}
                onChange={this.fieldChanged}
                />
            </main>
            )
        }
    }

    const container = document.getElementById('root');
    const root = ReactDOM.createRoot(container);
    root.render(<TapeApp />);

    </script>
  </body>
</html>