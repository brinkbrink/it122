<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Tapes on Deck</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <style>

        html {
            color: #333745;
            background-color: #7CA5B8;
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif
        }

        main {
          background-color: #FFEEDB;
          width: 90%;
          margin: auto;
          padding: .5em 2em 2em 2em;
          border-radius: 15px;
        }
        h2, h3, h4 {
          font-family: Georgia, serif;
          font-size: 2em;
        }

        h3 {
          font-size: 1.5em;
        }

        h4 {
            font-size: 1.2em;
        }

        .title {
            font-style: italic;
        }

        p {
            font-size: 1.2em;
        }

        a {
            color: #FE5F55;
        }

        a:hover {
            color: #7F96FF;
            text-decoration-style: wavy;
        }
    </style>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <h2>blah blah blah</h2>
    <div id="root"></div>
    <script type="text/babel">


    const Tapes = (props) => {
        let tapesList = props.data.map((tape) => <li key={tape.title} id={tape.title} onClick={props.clickHandler}>{tape.title}</li>);
        return <ul>{tapesList}</ul>;
    }

    const header = <h2>Home</h2>;
    const subHeader = <h3>Tapes</h3>;

    const TapeDetail = (props) => {
        return <div>detail<hr/>{props.tape.title}</div>
    }
    
    class TapeApp extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                tapes: <%- tapes %>,
                currentTape: {}
            };
            // this.selectItem = this.selectItem.bind(this);
        }

        showDetail = (event) => {
            console.log(event.target);
            console.log(event.target.innerText);
            let title = event.target.innerText;
            let newTape = this.state.tapes.find((tape) => tape.title == title);
            console.log(newTape);
        }

        render() {
            return (
            <div><h2>Listed Tapes</h2>
                <Tapes data={this.state.tapes} clickHandler = {this.showDetail}/>
                <TapeDetail
                tape={this.state.currentTape}
                />
            </div>
            )
        }
    }

    const container = document.getElementById('root');
    const root = ReactDOM.createRoot(container);
    root.render(<TapeApp />);

    </script>
  </body>
</html>